set nocompatible          "Remove vi compatibility"
set encoding=UTF-8

source ~/.vim/packages_vimplug.vim
" source ~/.vim/packages.vim

"=========================================================
" Various settings
"=========================================================
set termguicolors     "enable true color support
if has('gui_running')
  "set background=dark
  let ayucolor="light"
  colorscheme ayu
else
  let ayucolor="light"
  colorscheme ayu
endif

syntax enable		
set t_Co=256 		
set title		
set number		
set incsearch		
set scrolloff=3		
set autowriteall	
set undolevels=1000	
set autoindent		
set copyindent		
set hidden		
set nowrap		
set showmatch	
set ignorecase	
set smartcase	
set visualbell	
set noerrorbells
set textwidth=80

set tabstop=4		
set softtabstop=2	
set shiftwidth=2
set expandtab

"Enable scrolling in iterm2 using the 'SGR' protocol
set mouse=a
if has("mouse_sgr")
  set ttymouse=sgr
else
  set ttymouse=xterm2
end

"WildMenu completion
set wildignore+=*.pyc
set wildignore+=*.class
set wildignore+=*.DS_Store
set wildignore+=*.svn,.hg
set wildignore+=*.sw?

"New window splits placement
set splitbelow
set splitright

"Do not keep backup files
set nobackup
set nowritebackup
set noswapfile

set clipboard=unnamed

"======================================================
" Custom key mappings
"======================================================
"Custom key mappings ---------- {{{
let mapleader = ","
let localmapleader = "\\"
noremap \ ,

"---------------------------------------
" .vimrc and .gvimrc - Edit and sourcing
"---------------------------------------
noremap <leader>ev :edit $MYVIMRC<CR>
noremap <leader>eg :edit $HOME/.gvimrc<CR>
noremap <leader>sv :source $MYVIMRC<CR>
noremap <leader>sg :source $HOME/.gvimrc<CR>

"---------------------------------------
" jk <Esc>
"---------------------------------------
inoremap jk <Esc>
xnoremap jk <Esc>
cnoremap jk <C-c>

"---------------------------------------
" Paging - up and down
"---------------------------------------
noremap <C-F> <C-D>
noremap <C-B> <C-U>
nnoremap <Space> <C-D>

"---------------------------------------
" Insert Mode -  Movement
"---------------------------------------
inoremap <C-h> <C-o>h
inoremap <C-l> <C-o>a
inoremap <C-j> <C-o>j
inoremap <C-k> <C-o>k
inoremap <c-^> <c-o><c-^>

"--------------------------------------
"Insert Mode - Delete line/word, Upcase
"--------------------------------------
inoremap <c-d> <esc>ddi
inoremap <c-w> <esc>diwi
inoremap <c-u> <esc>viw~ea

"---------------------------------------
" Folding
"---------------------------------------
nnoremap <cr> za<cr>k
nnoremap <Leader><Leader> zR<cr>

"---------------------------------------
" Split windows navigation 
"---------------------------------------
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <tab> <c-w>w
nnoremap <S-tab> <c-w>W

"---------------------------------------
" Buffer navigation
"---------------------------------------
nnoremap j gj
nnoremap k gk
nnoremap ]b :bnext<CR>
nnoremap [b :bprev<CR>
nnoremap <BS> :bd<CR>
nnoremap <leader>n :NumbersToggle<CR>
nnoremap gf :vertical wincmd f<CR>
nnoremap 0 ^

"convinient keys
noremap! ยง #
noremap ยง #
lnoremap ยง #

"---------------------------------------
" Commands - search, current dir, nohl
"---------------------------------------
nnoremap ! :!
nnoremap ; :
vnoremap ; :
noremap - ;
nnoremap <leader>r :%s/
cnoremap %% <C-R>=expand('%:h').'/'<cr>
nnoremap <Leader><Space> :nohl<Bar>:echo<CR>

"fzf fuzzy file search
nnoremap <leader>p :Files<CR>

"---------------------------------------
" Insert line (b)elow or (a)bove
"---------------------------------------
nnoremap <leader>b o<esc>k
nnoremap <leader>a O<esc>j

"  Wrestling this from Buffergator
au VimEnter * nnoremap <leader>b o<esc>k

"---------------------------------------
"CAPS - (U)pcase, (D)uplicate selection, 
"       (Y)ank to end,(Q)-replay macro            
"---------------------------------------
nnoremap U viw~<esc>
vnoremap D yP'<
nnoremap Y y$
nnoremap Q @q

"---------------------------------------
" Move line(s)/Visual block - Up/Down
"---------------------------------------
nnoremap <silent> <c-k> :move-2<cr>
nnoremap <silent> <c-j> :move+<cr>
xnoremap <silent> <c-k> :move-2<cr>gv
xnoremap <silent> <c-j> :move'>+<cr>gv
nnoremap <silent> <c-h> <<
nnoremap <silent> <c-l> >>
xnoremap <silent> <c-h> <gv
xnoremap <silent> <c-l> >gv
xnoremap < <gv
xnoremap > >gv

if has("mac") || has("macunix")
  nmap <D-j> <c-j>
  nmap <D-k> <c-k>
  xmap <D-j> <c-j>
  xmap <D-k> <c-k>
endif

"---------------------------------------
" CTAGS  <C-t> ==> :pop
"---------------------------------------
nnoremap <C-]> g<C-]>
nnoremap g[ :pop<CR>

"---------------------------------------
" Saving and exit
"---------------------------------------
nmap <leader>q :wqa!<CR>
nmap <leader>w :w!<CR>
cnoremap sudow w !sudo tee % >/dev/null

" }}}

"------------------------------------------------------
" Other settings- switch backgrounds 
" -----------------------------------------------------
"call togglebg#map("<F5>")

"======================================================
" Programming languages settings
"======================================================

"Python file settings --------- {{{
augroup ft_python
  autocmd!
  autocmd FileType python nnoremap <buffer> <LocalLeader>c I#<esc>
  autocmd FileType python nnoremap <localleader>i :!isort %<cr><cr>
  autocmd FileType python nnoremap <localleader>= :0,$!yapf<cr>
  autocmd FileType python setlocal shiftwidth=4 expandtab tabstop=4 softtabstop=4
  autocmd FileType python setlocal colorcolumn=80
  autocmd FileType python setlocal textwidth=79
  autocmd FileType python setlocal completeopt-=preview
  "autocmd FileType python setlocal foldmethod=indent
  "autocmd FileType python setlocal foldignore=
augroup END
" }}}

"javascript file settings ------ {{{
augroup ft_js
  autocmd!
  autocmd FileType javascript nnoremap <buffer> <localleader>c I//<esc>
augroup END
" }}}

"Vimscript file settings -------- {{{
augroup ft_vim
  autocmd!
  autocmd FileType vim nnoremap <buffer> <LocalLeader>c I"<esc>
  autocmd FileType vim nnoremap setlocal foldmethod=marker
augroup END
" }}}

" Other files to consider Ruby
au BufRead,BufNewFile Gemfile,Rakefile,Thorfile,config.ru,Vagrantfile,Guardfile,Capfile set ft=ruby

"two space indentation in coffeescript files
au BufNewFile,BufReadPost *.coffee setl shiftwidth=2 expandtab

"SASS / SCSS
au BufNewFile,BufReadPost *.scss setl foldmethod=indent
au BufNewFile,BufReadPost *.sass setl foldmethod=indent
au BufRead,BufNewFile *.scss set filetype=scss

"htmldjango filetypes and sparkup plugin
au FileType htmldjango runtime! ftplugin/html/sparkup.vim

"match unnecessary whitespace
"au BufRead,BufNewFile *.py,*vimrc match BadWhitespace /\s\+$/

"=======================================================
"     Plugin Configuration
"=======================================================

"Sparkup
"-------
let g:sparkupNextMapping = '<c-;>'

" UltiSnips
" -------------
let g:UltiSnipsExpandTrigger='<s-tab>'
let g:UltiSnipsListSnippets="<c-s-tab>"
let g:UltiSnipsEditSplit='vertical'
let g:UltiSnipsSnippetsDir= '~/.vim/ultisnippets'
let g:UltiSnipsSnippetDirectories = ["ultisnippets"]

" Rails.vim
" ---------

"Maybe useful for powerline
"--------------------------
set laststatus=2			"always show the status line
"set guifont=Consolas:h12
"set fillchars+=stl:\ ,stlnc:\

"lightline statusline
"--------------------
let g:lightline = {
      \ 'colorscheme': 'solarized',
      \}

"NERDTree
"--------
let mapleader = "\\"
let g:NERDTreeWinPos = "right"
let NERDTreeQuitOnOpen = 1

"settings for textobj-rubyblock
runtime macros/matchit.vim

"ctrlp"
let g:ctrlp_use_caching=0
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|node_modules|venv|\.hg$\|\.svn$',
  \ 'file': '\.pyc$\|\.pyo$\|\.rbc$|\.rbo$\|\.class$\|\.o$\|\~$\',
  \ }
let g:ctrlp_dotfiles = 0
let g:ctrlp_switch_buffer = 0

"pymode configuration"

let g:pymode = 1
let g:pymode_python = 'python3'
"let g:pymode_motion = 1
let g:pymode_doc = 0
"let g:pymode_rope = 1
let g:pymode_rope_rename_bind = '<C-c>rr'
"let g:pymode_run = 1
"let g:pymode_run_bind = '<leader>x'
" Documentation
"Linting
"let g:pymode_lint = 1
let g:pymode_lint_checkers = ['pyflakes', 'pep8', 'mccabe']
" Auto check on save
"let g:pymode_lint_write = 1
"Ignore line width warning"
let g:pymode_lint_ignore = 'E501, E999'
" Support virtualenv
"let g:pymode_virtualenv = 1
" Enable breakpoints plugin
let g:pymode_breakpoint = 0
"let g:pymode_breakpoint_key = '<leader>k'
" syntax highlighting
"let g:pymode_syntax = 1
"let g:pymode_syntax_all = 1
"let g:pymode_syntax_indent_errors = g:pymode_syntax_all
"let g:pymode_syntax_space_errors = g:pymode_syntax_all
" Don't autofold code
"let g:pymode_folding = 1

"vim-test
"------------------
let test#python#runner = 'pytest'
let test#python#pytest#options = '--color=yes --verbose'

"Tagbar
"------------------
nmap <F8> :TagbarToggle<CR>

nmap <silent> <leader>T :TestNearest<CR>
nmap <silent> <leader>t :TestFile<CR>
nmap <silent> <leader>A :TestSuite<CR>

"eslint - javascript
let g:syntastic_javascript_checkers = ['eslint']


"---------------------------------------
" Plugin Key Mapppings
"---------------------------------------
nnoremap <leader>ue :UltiSnipsEdit!<cr>
nnoremap <leader>vv  :Rview<cr>
nnoremap <leader>vc  :Rcontroller<cr>
nnoremap <leader>vg  :Rmigration<cr>
nnoremap <leader>vm  :Rmodel<cr>
nnoremap <leader>n :NERDTreeToggle<CR>
"search anywhere in project"
nnoremap <leader>F :CtrlP<CR>
"search in current dir"
nnoremap <leader>f :CtrlPCurWD<CR>
"Buffergator Plugin - (d)rawer
nmap <leader>d :BuffergatorToggle<cr>
"Easy vim plugin
"Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
"Start interative EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)


" Reset map leader
" ----------------
let mapleader = ","
